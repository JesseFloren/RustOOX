class Array {

    Array() {}

    static void incr(int[] a, int k, Array l) {
        >l<;
        int x := a[k];
        a[k] := x * 2;
        <l>;
    }

    static void Main(int[] a) 
        requires(a != null && #a > 1 && #a < 10 &&  (forall elem, index : a : elem > 0)) 
    {
        int k := 11;

        Array l := new Array();

        a[k] := 5;

        fork Array.incr(a, k, l);
        fork Array.incr(a, k, l);

        join;

        int x := a[k];
        assert(x == 20);
    }
}

class Foo {
    static void f(int[] a, int k)
        requires(a != null && #a > 1 && #a < 10 &&  0 <= k && k < #a && (forall elem, index : a : elem > 0))
    {
        fork Foo.b(a, k - 3);
        fork Foo.c(a, k + 3);

        join;

        int value := a[k];
        assert(value > 1);
    }

    static void b(int[] a, int k) {
        int x := a[k + 3];
        a[k + 3] := x * 2;

    }

    static void c(int[] a, int k) {
        int x := a[k - 3];
        a[k - 3] := x / 2;
    }
}